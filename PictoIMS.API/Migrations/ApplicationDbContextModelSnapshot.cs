// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PictoIMS.API.Data;

#nullable disable

namespace PictoIMS.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PictoIMS.API.Models.InventoryTrackingHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("history_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("AuditYear")
                        .HasColumnType("integer")
                        .HasColumnName("audit_year");

                    b.Property<DateTime>("DateRecorded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_recorded");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.HasKey("HistoryId");

                    b.HasIndex("ItemId");

                    b.ToTable("inventory_tracking_history", (string)null);
                });

            modelBuilder.Entity("PictoIMS.API.Models.PictoInventory", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("category");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("item_name");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("location");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("unit");

                    b.HasKey("ItemId");

                    b.ToTable("picto_inventory", (string)null);
                });

            modelBuilder.Entity("PictoIMS.API.Models.RequisitionForm", b =>
                {
                    b.Property<int>("RfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RfId"));

                    b.Property<DateTime?>("ApprovedByDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("approved_by_date");

                    b.Property<string>("ApprovedByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("approved_by_name");

                    b.Property<string>("ApprovedByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("approved_by_position");

                    b.Property<DateTime?>("CheckedByDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("checked_by_date");

                    b.Property<string>("CheckedByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("checked_by_name");

                    b.Property<string>("CheckedByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("checked_by_position");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_requested");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("department");

                    b.Property<DateTime?>("IssuedByDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issued_by_date");

                    b.Property<string>("IssuedByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("issued_by_name");

                    b.Property<string>("IssuedByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("issued_by_position");

                    b.Property<string>("Purpose")
                        .HasColumnType("text")
                        .HasColumnName("purpose");

                    b.Property<DateTime?>("ReceivedByDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("received_by_date");

                    b.Property<string>("ReceivedByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("received_by_name");

                    b.Property<string>("ReceivedByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("received_by_position");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("requester_name");

                    b.Property<string>("RequesterPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("requester_position");

                    b.HasKey("RfId");

                    b.ToTable("requisition_forms", (string)null);
                });

            modelBuilder.Entity("PictoIMS.API.Models.TransferIn", b =>
                {
                    b.Property<int>("TransferInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transfer_in_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransferInId"));

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_received");

                    b.Property<string>("FromLocation")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("from_location");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("ReceivedByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("received_by_name");

                    b.Property<string>("ReceivedByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("received_by_position");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.HasKey("TransferInId");

                    b.HasIndex("ItemId");

                    b.ToTable("transfer_in");
                });

            modelBuilder.Entity("PictoIMS.API.Models.TransferOut", b =>
                {
                    b.Property<int>("TransferOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transfer_out_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransferOutId"));

                    b.Property<DateTime>("DateTransferred")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_transferred");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("to_location");

                    b.Property<string>("TransferredByName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("transferred_by_name");

                    b.Property<string>("TransferredByPosition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("transferred_by_position");

                    b.HasKey("TransferOutId");

                    b.HasIndex("ItemId");

                    b.ToTable("transfer_out");
                });

            modelBuilder.Entity("PictoIMS.API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("PictoIMS.API.Models.InventoryTrackingHistory", b =>
                {
                    b.HasOne("PictoIMS.API.Models.PictoInventory", "Item")
                        .WithMany("TrackingHistory")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PictoIMS.API.Models.TransferIn", b =>
                {
                    b.HasOne("PictoIMS.API.Models.PictoInventory", "Item")
                        .WithMany("TransferIns")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PictoIMS.API.Models.TransferOut", b =>
                {
                    b.HasOne("PictoIMS.API.Models.PictoInventory", "Item")
                        .WithMany("TransferOuts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PictoIMS.API.Models.PictoInventory", b =>
                {
                    b.Navigation("TrackingHistory");

                    b.Navigation("TransferIns");

                    b.Navigation("TransferOuts");
                });
#pragma warning restore 612, 618
        }
    }
}
